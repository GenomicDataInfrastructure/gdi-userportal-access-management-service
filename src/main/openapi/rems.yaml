# SPDX-FileCopyrightText: 2024 PNED G.I.E.
#
# SPDX-License-Identifier: Apache-2.0

openapi: 3.0.3
info:
  title: REMS API
  description: REMS API Services
  version: 1.0.0
servers:
  - url: /
paths:
  /api/users/create:
    post:
      tags:
        - rems-users
      summary: 'Create or update user (roles: owner, user-owner)'
      parameters:
        - name: x-rems-api-key
          in: header
          description: REMS API-Key (optional for UI, required for API)
          schema:
            type: string
        - name: x-rems-user-id
          in: header
          description: user (optional for UI, required for API). This can be a REMS internal or an external user identity attribute (specified in config.edn).
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserCommand'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
      x-codegen-request-body-name: CreateUserCommand
  /api/my-applications:
    get:
      tags:
        - rems-applications
      summary: 'Get the current user''s own applications (roles: logged-in)'
      parameters:
        - name: x-rems-api-key
          in: header
          description: REMS API-Key (optional for UI, required for API)
          schema:
            type: string
        - name: x-rems-user-id
          in: header
          description: user (optional for UI, required for API). This can be a REMS internal or an external user identity attribute (specified in config.edn).
          schema:
            type: string
        - name: query
          in: query
          description: search query [documentation](https://github.com/CSCfi/rems/blob/master/docs/search.md)
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationOverview'
  /api/applications/create:
    post:
      tags:
        - rems-application-command
      summary: 'Create a new application (roles: logged-in)'
      parameters:
        - in: header
          name: x-rems-api-key
          description: REMS API-Key (optional for UI, required for API)
          required: false
          schema:
            type: string
        - in: header
          name: x-rems-user-id
          description: User (optional for UI, required for API). This can be a REMS internal or an external user identity attribute (specified in config.edn).
          required: false
          schema:
            type: string
      requestBody:
        description: Application creation data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationCommand'
      responses:
        '200':
          description: Application creation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateApplicationResponse'
  /api/applications/submit:
    post:
      tags:
        - rems-application-command
      summary: 'Submits a submit command for an application (roles: logged-in)'
      parameters:
        - in: header
          name: x-rems-api-key
          description: REMS API-Key (optional for UI, required for API)
          required: false
          schema:
            type: string
        - in: header
          name: x-rems-user-id
          description: User (optional for UI, required for API). This can be a REMS internal or an external user identity attribute (specified in config.edn).
          required: false
          schema:
            type: string
      requestBody:
        description: Application submission data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitApplicationCommand'
      responses:
        '200':
          description: Application submission successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitApplicationResponse'
  /api/applications/{application-id}:
    get:
      tags:
        - rems-applications
      summary: 'Retrieve a given application (roles: logged-in)'
      parameters:
        - name: x-rems-api-key
          in: header
          description: REMS API-Key (optional for UI, required for API)
          schema:
            type: string
        - name: x-rems-user-id
          in: header
          description: user (optional for UI, required for API). This can be a REMS internal or an external user identity attribute (specified in config.edn).
          schema:
            type: string
        - name: application-id
          in: path
          required: true
          description: Application id
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
        '404':
          description: No application found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ApplicationOverview:
      required:
        - application/accepted-licenses
        - application/applicant
        - application/attachments
        - application/created
        - application/description
        - application/external-id
        - application/id
        - application/invited-members
        - application/last-activity
        - application/members
        - application/modified
        - application/permissions
        - application/resources
        - application/roles
        - application/state
        - application/todo
        - application/workflow
      properties:
        application/workflow:
          $ref: '#/components/schemas/Response10953Workflow'
        application/external-id:
          type: string
          description: Assigned external id if it exists, otherwise the generated one
        application/first-submitted:
          type: string
          format: date-time
        application/blacklist:
          type: array
          description: Which members of this application are blacklisted for which resources
          items:
            $ref: '#/components/schemas/BlacklistEntry'
        application/id:
          type: integer
          format: int64
        application/duo:
          $ref: '#/components/schemas/Response10953Duo'
        application/assigned-external-id:
          type: string
        application/applicant:
          $ref: '#/components/schemas/UserWithAttributes'
        application/copied-from:
          $ref: '#/components/schemas/Response10953CopiedFrom'
        application/todo:
          type: string
          nullable: true
          enum:
            - no-pending-requests
            - new-application
            - resubmitted-application
            - waiting-for-your-decision
            - waiting-for-review
            - waiting-for-your-review
            - waiting-for-decision
        application/members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserWithAttributes'
        entitlement/end:
          type: string
          format: date-time
          nullable: true
        application/resources:
          type: array
          items:
            $ref: '#/components/schemas/V2Resource'
        application/deadline:
          type: string
          format: date-time
        application/accepted-licenses:
          $ref: '#/components/schemas/ApplicationAcceptedLicenses'
        application/invited-members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Response10953InvitedMembers'
        application/description:
          type: string
        application/votes:
          $ref: '#/components/schemas/Response10953Votes'
        application/generated-external-id:
          type: string
        application/permissions:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - application.command/copy-as-new
              - application.command/invite-member
              - application.command/submit
              - application.command/invite-decider
              - application.command/request-review
              - see-everything
              - application.command/redact-attachments
              - application.command/invite-reviewer
              - application.command/change-applicant
              - application.command/review
              - application.command/reject
              - application.command/add-licenses
              - application.command/remove-member
              - application.command/revoke
              - application.command/vote
              - application.command/request-decision
              - application.command/accept-licenses
              - application.command/accept-invitation
              - application.command/decide
              - application.command/uninvite-member
              - application.command/remark
              - application.command/send-expiration-notifications
              - application.command/add-member
              - application.command/delete
              - application.command/save-draft
              - application.command/approve
              - application.command/return
              - application.command/assign-external-id
              - application.command/close
              - application.command/change-resources
              - application.command/create
        application/last-activity:
          type: string
          format: date-time
        application/roles:
          uniqueItems: true
          type: array
          items:
            type: string
        application/attachments:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationAttachment'
        application/created:
          type: string
          format: date-time
        application/state:
          type: string
          enum:
            - application.state/draft
            - application.state/closed
            - application.state/approved
            - application.state/returned
            - application.state/rejected
            - application.state/revoked
            - application.state/submitted
        application/copied-to:
          type: array
          items:
            $ref: '#/components/schemas/Response10953CopiedTo'
        application/modified:
          type: string
          format: date-time
    Application:
      required:
        - application/accepted-licenses
        - application/applicant
        - application/attachments
        - application/created
        - application/description
        - application/events
        - application/external-id
        - application/forms
        - application/id
        - application/invited-members
        - application/last-activity
        - applications/licenses
        - application/members
        - application/modified
        - application/permissions
        - application/resources
        - application/roles
        - application/state
        - application/todo
        - application/workflow
      properties:
        application/workflow:
          $ref: '#/components/schemas/Response10953Workflow'
        application/external-id:
          type: string
          description: Assigned external id if it exists, otherwise the generated one
        application/first-submitted:
          type: string
          format: date-time
        application/blacklist:
          type: array
          description: Which members of this application are blacklisted for which resources
          items:
            $ref: '#/components/schemas/BlacklistEntry'
        application/id:
          type: integer
          format: int64
        application/duo:
          $ref: '#/components/schemas/Response10953Duo'
        application/assigned-external-id:
          type: string
        application/applicant:
          $ref: '#/components/schemas/UserWithAttributes'
        application/copied-from:
          $ref: '#/components/schemas/Response10953CopiedFrom'
        application/todo:
          type: string
          nullable: true
          enum:
            - no-pending-requests
            - new-application
            - resubmitted-application
            - waiting-for-your-decision
            - waiting-for-review
            - waiting-for-your-review
            - waiting-for-decision
        application/members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserWithAttributes'
        entitlement/end:
          type: string
          format: date-time
          nullable: true
        application/resources:
          type: array
          items:
            $ref: '#/components/schemas/V2Resource'
        application/deadline:
          type: string
          format: date-time
        application/accepted-licenses:
          $ref: '#/components/schemas/ApplicationAcceptedLicenses'
        application/invited-members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Response10953InvitedMembers'
        application/description:
          type: string
        application/votes:
          $ref: '#/components/schemas/Response10953Votes'
        application/generated-external-id:
          type: string
        application/permissions:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - application.command/copy-as-new
              - application.command/invite-member
              - application.command/submit
              - application.command/invite-decider
              - application.command/request-review
              - see-everything
              - application.command/redact-attachments
              - application.command/invite-reviewer
              - application.command/change-applicant
              - application.command/review
              - application.command/reject
              - application.command/add-licenses
              - application.command/remove-member
              - application.command/revoke
              - application.command/vote
              - application.command/request-decision
              - application.command/accept-licenses
              - application.command/accept-invitation
              - application.command/decide
              - application.command/uninvite-member
              - application.command/remark
              - application.command/send-expiration-notifications
              - application.command/add-member
              - application.command/delete
              - application.command/save-draft
              - application.command/approve
              - application.command/return
              - application.command/assign-external-id
              - application.command/close
              - application.command/change-resources
              - application.command/create
        application/last-activity:
          type: string
          format: date-time
        application/roles:
          uniqueItems: true
          type: array
          items:
            type: string
        application/attachments:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationAttachment'
        application/created:
          type: string
          format: date-time
        application/state:
          type: string
          enum:
            - application.state/draft
            - application.state/closed
            - application.state/approved
            - application.state/returned
            - application.state/rejected
            - application.state/revoked
            - application.state/submitted
        application/copied-to:
          type: array
          items:
            $ref: '#/components/schemas/Response10953CopiedTo'
        application/modified:
          type: string
          format: date-time
        application/events:
            type: array
            items:
                $ref: '#/components/schemas/Event'
        application/forms:
            type: array
            items:
                $ref: '#/components/schemas/Form'
        application/licenses:
            type: array
            items:
                $ref: '#/components/schemas/V2License'
    BlacklistEntry:
      required:
        - blacklist/resource
        - blacklist/user
      properties:
        blacklist/user:
          $ref: '#/components/schemas/UserWithAttributes'
        blacklist/resource:
          $ref: '#/components/schemas/Response10953BlacklistResource'
    Response10953BlacklistResource:
      required:
        - resource/ext-id
      properties:
        resource/ext-id:
          type: string
    Response10953Duo:
      properties:
        duo/codes:
          type: array
          items:
            $ref: '#/components/schemas/DuoCodeFull'
        duo/matches:
          type: array
          items:
            $ref: '#/components/schemas/DuoCodeMatch'
    Response10953CopiedFrom:
      required:
        - application/external-id
        - application/id
      properties:
        application/id:
          type: integer
          format: int64
        application/external-id:
          type: string
    V2Resource:
      required:
        - catalogue-item/archived
        - catalogue-item/enabled
        - catalogue-item/end
        - catalogue-item/expired
        - catalogue-item/id
        - catalogue-item/infourl
        - catalogue-item/start
        - catalogue-item/title
        - resource/ext-id
        - resource/id
      properties:
        catalogue-item/end:
          type: string
          format: date-time
          nullable: true
        catalogue-item/expired:
          type: boolean
        catalogue-item/enabled:
          type: boolean
        resource/id:
          type: integer
          format: int64
        catalogue-item/title:
          $ref: '#/components/schemas/LocalizedString'
        resource/duo:
          $ref: '#/components/schemas/Response10953ResourcesDuo'
        catalogue-item/infourl:
          $ref: '#/components/schemas/LocalizedString'
        resource/ext-id:
          type: string
        catalogue-item/start:
          type: string
          format: date-time
        catalogue-item/archived:
          type: boolean
        catalogue-item/id:
          type: integer
          format: int64
    DuoCodeMatch:
      required:
        - duo/id
        - duo/label
        - duo/shorthand
        - duo/validation
        - resource/id
      type: object
      properties:
        duo/id:
          type: string
        duo/shorthand:
          type: string
        duo/label:
          $ref: '#/components/schemas/Response10953DuoMatchesLabel'
        resource/id:
          type: integer
          format: int64
        duo/validation:
          $ref: '#/components/schemas/Response10953DuoMatchesValidation'
    Response10953DuoMatchesValidation:
      required:
        - validity
      properties:
        validity:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Response10953DuoMatchesValidationErrors'
    Response10953DuoMatchesValidationErrors:
      required:
        - type
      properties:
        type:
          type: string
    Response10953DuoMatchesLabel:
      additionalProperties:
        type: object
    Response10953ResourcesDuo:
      required:
        - duo/codes
      properties:
        duo/codes:
          type: array
          items:
            $ref: '#/components/schemas/DuoCodeFull'
    LocalizedString:
      additionalProperties:
        type: string
      description: Text values keyed by languages
      example:
        fi: text in Finnish
        en: text in English
    DuoCodeFull:
      required:
        - description
        - id
        - label
      properties:
        id:
          type: string
        restrictions:
          type: array
          items:
            $ref: '#/components/schemas/Response10953ResourcesDuoCodesRestrictions'
        more-info:
          $ref: '#/components/schemas/LocalizedString'
        shorthand:
          type: string
          nullable: true
        label:
          $ref: '#/components/schemas/LocalizedString'
        description:
          $ref: '#/components/schemas/LocalizedString'
    Response10953ResourcesDuoCodesRestrictions:
      required:
        - type
      properties:
        type:
          type: string
        values:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/Response10953ResourcesDuoCodesRestrictionsValues'
    Response10953ResourcesDuoCodesRestrictionsValues:
      required:
        - value
      properties:
        value:
          type: string
    ApplicationAcceptedLicenses:
      type: object
      additionalProperties:
        uniqueItems: true
        type: array
        items:
          type: integer
          format: int64
    Response10953InvitedMembers:
      required:
        - email
        - name
      properties:
        name:
          type: string
        email:
          type: string
    Response10953Votes:
      additionalProperties:
        type: string
    ApplicationAttachment:
      required:
        - attachment/filename
        - attachment/id
        - attachment/type
      properties:
        attachment/id:
          type: integer
          format: int64
        attachment/filename:
          type: string
        attachment/type:
          type: string
        attachment/event:
          $ref: '#/components/schemas/Response10953AttachmentsEvent'
        attachment/user:
          $ref: '#/components/schemas/UserWithAttributes'
        attachment/redacted:
          type: boolean
        attachment/can-redact:
          type: boolean
    UserWithAttributes:
      required:
        - email
        - name
        - userid
      properties:
        userid:
          type: string
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationId'
        notification-email:
          type: string
          nullable: true
        researcher-status-by:
          type: string
    Response10953AttachmentsEvent:
      required:
        - event/id
      properties:
        event/id:
          type: integer
          format: int64
    Response10953CopiedTo:
      required:
        - application/external-id
        - application/id
      properties:
        application/id:
          type: integer
          format: int64
        application/external-id:
          type: string
    Response10953Workflow:
      required:
        - workflow/id
        - workflow/type
      properties:
        workflow/id:
          type: integer
          format: int64
        workflow/type:
          type: string
        workflow.dynamic/handlers:
          type: array
          items:
            $ref: '#/components/schemas/Handler'
        workflow/voting:
          $ref: '#/components/schemas/WorkflowVoting'
        workflow/anonymize-handling:
          type: boolean
    Handler:
      required:
        - email
        - name
        - userid
      properties:
        userid:
          type: string
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationId'
        notification-email:
          type: string
          nullable: true
        researcher-status-by:
          type: string
        handler/active?:
          type: boolean
    OrganizationId:
      required:
        - organization/id
      properties:
        organization/id:
          type: string
    WorkflowVoting:
      required:
        - type
      properties:
        type:
          type: string
          nullable: true
          enum:
            - handlers-vote
    CreateUserCommand:
      required:
        - email
        - name
        - userid
      properties:
        userid:
          type: string
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationId'
    SuccessResponse:
      required:
        - success
      properties:
        success:
          type: boolean
        errors:
          type: array
          items:
            type: object
        warnings:
          type: array
          items:
            type: object
    V2License:
      required:
        - license/type
        - license/title
        - license/id
        - license/enabled
        - license/archived
      properties:
        license/type:
          type: string
          enum:
            - link
            - attachment
            - text
        license/title:
          $ref: '#/components/schemas/LocalizedString'
        license/id:
          type: integer
          format: int64
        license/enabled:
          type: boolean
        license/archived:
          type: boolean
    Form:
      required:
        - form/id
        - form/internal-name
        - form/external-title
        - form/fields
      properties:
        form/id:
          type: integer
          format: int64
        form/internal-name:
          type: string
        form/external-title:
          $ref: '#/components/schemas/LocalizedString'
        form/fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    Field:
      required:
        - field/private
        - field/title
        - field/visible
        - field/type
        - field/value
        - field/id
        - field/optional
      properties:
        field/private:
          type: boolean
        field/title:
          $ref: '#/components/schemas/LocalizedString'
        field/visible:
          type: boolean
        field/type:
          type: string
          enum:
            - description
            - email
            - date
            - phone-number
            - table
            - header
            - texta
            - option
            - label
            - multiselect
            - ip-address
            - attachment
            - text
        field/value:
          type: string
          example: value
          description: 'A string for most fields, or [[{"column": string, "value": string}]] for table fields'
        field/id:
          type: string
        field/optional:
          type: boolean
    Event:
      required:
        - event/type
        - event/time
        - event/actor
        - application/id
        - event/actor-attributes
      properties:
        event/type:
          type: string
        event/time:
          type: string
          format: date-time
        event/actor:
          type: string
        application/id:
          type: integer
          format: int64
        event/actor-attributes:
          $ref: '#/components/schemas/UserWithAttributes'
    ApplicationFormsFieldsValue:
      type: object
      properties:
        column:
          type: string
        value:
          type: string
      additionalProperties: false
      required:
        - column
        - value

    CreateApplicationCommand:
      type: object
      properties:
        catalogue-item-ids:
          type: array
          items:
            type: string
      required:
        - catalogue-item-ids
    CreateApplicationResponse:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          items: {}
        warnings:
          type: array
          items: {}
        application-id:
          type: integer
          format: int64
      required:
        - success
    SubmitApplicationCommand:
      type: object
      properties:
        application-id:
          type: integer
          format: int64
      required:
        - application-id
    SubmitApplicationResponse:
      type: object
      properties:
        success:
          type: boolean
        errors:
          type: array
          items: {}
        warnings:
          type: array
          items: {}
        application-id:
          type: integer
          format: int64
      required:
        - success
    ErrorResponse:
      properties:
        error:
          type: string
          title: error description
